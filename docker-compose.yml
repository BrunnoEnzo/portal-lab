
services:
  #--- SERVIÇO NGINX ---#
  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - frontend
      - backend
    networks:
      - portal_app

  #--- SERVIÇO FRONTEND (React + Vite) ---#
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      # --- ADICIONE ESTA SEÇÃO ---
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      # --------------------------
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '${FRONTEND_PORT}:${FRONTEND_PORT}'
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - GITHUB_ID=${GITHUB_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - BACKEND_INTERNAL_URL=${BACKEND_INTERNAL_URL}
    networks:
      - portal_app
    depends_on:
      - backend

  #--- SERVIÇO BACKEND (NestJS) ---#
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      # --- ADICIONE ESTA LINHA ---
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - portal_app

  #--- SERVIÇO POSTGRES ---#
  postgres:
    container_name: postgres
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - portal_app

  #--- SERVIÇO PGADMIN ---#
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - portal_app

# Definição dos volumes para persistência de dados
volumes:
  postgres_data:
  pgadmin_data:

# Definição da rede para comunicação entre os containers
networks:
  portal_app:
    driver: bridge